[{"/Users/reshavthapa/Desktop/reshav/projects/chatapp/src/index.js":"1","/Users/reshavthapa/Desktop/reshav/projects/chatapp/src/App.js":"2"},{"size":257,"mtime":1673114362913,"results":"3","hashOfConfig":"4"},{"size":3036,"mtime":1673117693168,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rp9eoe",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"/Users/reshavthapa/Desktop/reshav/projects/chatapp/src/index.js",[],[],"/Users/reshavthapa/Desktop/reshav/projects/chatapp/src/App.js",["13"],[],"import React, { useRef, useState } from 'react';\nimport './App.css';\n\n// import firebase\nimport firebase from \"firebase/compat/app\"\nimport 'firebase/compat/firestore'\nimport 'firebase/compat/auth'\nimport 'firebase/compat/analytics'\n\n\n// Firebase authentication hooks\nimport {useAuthState} from 'react-firebase-hooks/auth'\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBNPfdGC3VpXZs0md9Q5w1V-BtLb6XvEuk\",\n  authDomain: \"letsconnect-bf285.firebaseapp.com\",\n  projectId: \"letsconnect-bf285\",\n  storageBucket: \"letsconnect-bf285.appspot.com\",\n  messagingSenderId: \"958357147280\",\n  appId: \"1:958357147280:web:302318a90e6e62ae655215\",\n  measurementId: \"G-G92WG9GYR8\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Welcome to our chat app</h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n      <p>Do not violate the community guidelines or you will be banned for life!</p>\n    </>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n\n      <button type=\"submit\" disabled={!formValue}>send</button>\n\n    </form>\n  </>)\n}\n\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (<>\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} alt = \"hi\" />\n      <p>{text}</p>\n    </div>\n  </>)\n}\n\n\nexport default App;\n",{"ruleId":"14","severity":1,"message":"15","line":27,"column":7,"nodeType":"16","messageId":"17","endLine":27,"endColumn":16},"no-unused-vars","'analytics' is assigned a value but never used.","Identifier","unusedVar"]